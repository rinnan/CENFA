
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "sdmApp"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('sdmApp')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("sdmApp")
> ### * sdmApp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sdmApp
> ### Title: starts the graphical user interface developed with shiny.
> ### Aliases: sdmApp
> 
> ### ** Examples
> 
> if(interactive()){
+ #load the package
+ library(sdmApp)
+ sdmApp()
+ }
> 
> 
> 
> cleanEx()
> nameEx("sdmApp_PA")
> ### * sdmApp_PA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sdmApp_PA
> ### Title: Plot presence/absence map
> ### Aliases: sdmApp_PA
> 
> ### ** Examples
> 
> r <- raster::raster(system.file("extdata","AETI.tif",package = "sdmApp"))
> r <- r > 4000
> sdmApp_PA(r)
> 
> 
> 
> cleanEx()
> nameEx("sdmApp_RasterPlot")
> ### * sdmApp_RasterPlot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sdmApp_RasterPlot
> ### Title: Plot a raster
> ### Aliases: sdmApp_RasterPlot
> 
> ### ** Examples
> 
> r <- raster::raster(system.file("extdata","AETI.tif",package = "sdmApp"))
> sdmApp_RasterPlot(r)
> 
> 
> 
> cleanEx()
> nameEx("sdmApp_TimesRasters")
> ### * sdmApp_TimesRasters
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sdmApp_TimesRasters
> ### Title: Multiply the probability of occurrence map with the
> ###   presence/absence map to get a presence map only.
> ### Aliases: sdmApp_TimesRasters
> 
> ### ** Examples
> 
> r <- raster::raster(system.file("extdata","AETI.tif",package = "sdmApp"))
> r2 <- r > raster::cellStats(r, stat='mean', na.rm=TRUE)
> r <- r/raster::maxValue(r)
> names(r) <- "propability of occurence"
> z<-sdmApp_TimesRasters(r,r2)
> sdmApp_RasterPlot(z)
> 
> 
> 
> cleanEx()
> nameEx("sdmApp_fold_Explorer")
> ### * sdmApp_fold_Explorer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sdmApp_fold_Explorer
> ### Title: Explore the generated folds and visualize the placement of folds
> ###   and distribution of species data over folds.
> ### Aliases: sdmApp_fold_Explorer
> 
> ### ** Examples
> 
> # load blockCV package data
> library(blockCV)
> awt <- raster::brick(system.file("extdata", "awt.grd", package = "blockCV"))
> #import presence-absence species data
> PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
> #make a sf object from data.frame
> pa_data <- sf::st_as_sf(PA, coords = c("x", "y"), crs = raster::crs(awt))
> #spatial blocking by specified range and random assignment
> sb <- spatialBlock(speciesData = pa_data,species = "Species",
+ rasterLayer = awt,theRange = 70000,k = 5,
+ selection = "random",iteration = 100)
The best folds was in iteration 20:
  train_0 train_1 test_0 test_1
1     121     103     17     13
2     104      98     34     18
3     115     101     23     15
4     106     105     32     11
5     106      57     32     59
> sdmApp_fold_Explorer(sb,awt,pa_data,1)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:blockCV’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  6.298 0.185 6.518 0.002 0.003 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
